{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/sql_introduction",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"a958490f-4b68-5ef7-82b4-d686f7291c15","excerpt":"Most notes taken here are from the Udacity SQL course Aggregations Aggregation functions work on the values of a column. They return a single value. Functionâ€¦","html":"<p>Most notes taken here are from the <a href=\"https://www.udacity.com/course/ud197\">Udacity SQL course</a></p>\n<h1 id=\"aggregations\">Aggregations</h1>\n<p>Aggregation functions work on the values of a column.</p>\n<p>They return a single value.</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FIRST()</td>\n<td>First value</td>\n</tr>\n<tr>\n<td>LAST()</td>\n<td>Last value</td>\n</tr>\n<tr>\n<td>COUNT()</td>\n<td>Number of rows</td>\n</tr>\n<tr>\n<td>MAX()</td>\n<td>Largest value</td>\n</tr>\n<tr>\n<td>MIN()</td>\n<td>Smallest value</td>\n</tr>\n<tr>\n<td>SUM()</td>\n<td>Sum of column</td>\n</tr>\n<tr>\n<td>AVG()</td>\n<td>Average value</td>\n</tr>\n</tbody>\n</table>\n<p>Not all functions work on all kinds of columns.</p>\n<h1 id=\"joins\">Joins</h1>\n<p>JOIN clause is used to combine rows from several tables.\nThe combination is based on a common field between them.</p>\n<p>There are different JOIN operaions in SQL:</p>\n<ul>\n<li>INNER JOIN: Returns rows when at least one match in <em>both</em> tables</li>\n<li>LEFT JOIN: Return <em>all</em> rows from left table and <em>matched</em> rows from right table</li>\n<li>RIGHT JOIN: the other way round</li>\n<li>FULL JOIN: Return all rows when a match in <em>one</em> table</li>\n</ul>\n<p>Example:</p>\n<ul>\n<li>2 Tables:\n<ul>\n<li>Animals in Zoo (<code class=\"language-text\">animals</code>)\n<ul>\n<li><code class=\"language-text\">name</code></li>\n<li><code class=\"language-text\">species</code></li>\n<li><code class=\"language-text\">birthdate</code></li>\n</ul>\n</li>\n<li>Diet of Animals (<code class=\"language-text\">diet</code>)\n<ul>\n<li><code class=\"language-text\">species</code></li>\n<li><code class=\"language-text\">food</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Example: Which animals eat fisch?</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n  animals<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n  animals<span class=\"token punctuation\">.</span>species<span class=\"token punctuation\">,</span>\n  diet<span class=\"token punctuation\">.</span>food\n<span class=\"token keyword\">FROM</span> animals <span class=\"token keyword\">JOIN</span> diet\n<span class=\"token keyword\">ON</span> animal<span class=\"token punctuation\">.</span>species <span class=\"token operator\">=</span> diet<span class=\"token punctuation\">.</span>species\n<span class=\"token keyword\">WHERE</span> food <span class=\"token operator\">=</span> <span class=\"token string\">'fish'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1 id=\"unique-keys\">Unique Keys</h1>\n<ul>\n<li>Primary keys used to identify an entry (row) in a table</li>\n<li>Most <a href=\"https://en.wikipedia.org/wiki/Relational_database_management_system\">RDBMS</a> can generate unique queues</li>\n<li>Sometimes a table already has a field that can be used as unique primary key</li>\n</ul>\n<h1 id=\"select-clauses\">Select Clauses</h1>\n<ul>\n<li>\n<p>LIMIT count [OFFSET skip]</p>\n<ul>\n<li>count: how many rows to return</li>\n<li>skip: how far into the result to start</li>\n</ul>\n</li>\n<li>\n<p>ORDER BY columns [DESC]</p>\n<ul>\n<li>columns: which columns to sort by, seperated by comas</li>\n<li>DESC: sort in reverse order (descending)</li>\n</ul>\n</li>\n<li>\n<p>GROUP BY columns</p>\n<ul>\n<li>used only with aggregations (e.g. count, sum)</li>\n<li>which columns to use for aggregation</li>\n</ul>\n</li>\n</ul>\n<p>Select example:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span> birthday <span class=\"token keyword\">FROM</span> animals <span class=\"token keyword\">WHERE</span> species <span class=\"token operator\">=</span> <span class=\"token string\">'gorilla'</span> <span class=\"token operator\">AND</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Max'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">SELECT</code>: selects <em>colums</em></li>\n<li><code class=\"language-text\">FROM</code>: table to select from</li>\n<li><code class=\"language-text\">WHERE</code>: row restriction</li>\n</ul>","frontmatter":{"title":"Intro to SQL","tags":["SQL"],"category":"Programming"},"headings":[{"depth":1,"value":"Aggregations"},{"depth":1,"value":"Joins"},{"depth":1,"value":"Unique Keys"},{"depth":1,"value":"Select Clauses"}]}},"pageContext":{"id":"a958490f-4b68-5ef7-82b4-d686f7291c15","previousPost":{"title":"Modern OS's","slug":"/blog/modern_os"},"nextPost":{"title":"Enums in C and C++","slug":"/blog/enums"},"dates":{"created":1428950217,"modified":1647509701}}},
    "staticQueryHashes": []}