{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/software_development_priorities",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"96f2a036-57cb-566f-8e23-f25ec51ce56e","excerpt":"This page is still work in progress [TOC] When developping software the priorities are as following: correctness maintainability efficiency Correct SW Defensiveâ€¦","html":"<blockquote>\n<p>This page is still work in progress</p>\n</blockquote>\n<p>[TOC]</p>\n<p>When developping software the priorities are as following:</p>\n<ol>\n<li>correctness</li>\n<li>maintainability</li>\n<li>efficiency</li>\n</ol>\n<h2 id=\"correct-sw\">Correct SW</h2>\n<ul>\n<li>Defensive Programming</li>\n<li>Unit Tests</li>\n<li>Contracts</li>\n<li>Static Analysis</li>\n</ul>\n<h2 id=\"maintainable-sw\">Maintainable SW</h2>\n<ul>\n<li>Architecture</li>\n<li>Design Patterns</li>\n<li>Idioms</li>\n<li>Readable/intuitive code</li>\n<li>Correct and Actual Documentation</li>\n</ul>\n<h2 id=\"optimal-efficient-optimized-sw\">Optimal, efficient (Optimized) SW</h2>\n<ul>\n<li>Speed</li>\n<li>Size (Program Size, Memory Use)</li>\n<li>Dynamic Analysis</li>\n<li>No premature optimization</li>\n<li>Often code gets less readable/maintainable</li>\n<li>let the compiler/linker do the hard work</li>\n</ul>","frontmatter":{"title":"Software Development Priorities","tags":["Software Development Methodology"],"category":"Programming"},"headings":[{"depth":2,"value":"Correct SW"},{"depth":2,"value":"Maintainable SW"},{"depth":2,"value":"Optimal, efficient (Optimized) SW"}]}},"pageContext":{"id":"96f2a036-57cb-566f-8e23-f25ec51ce56e","previousPost":{"title":"Smart Pointers","slug":"/blog/cpp_smart_pointers"},"nextPost":{"title":"C++ on Embedded Systems","slug":"/blog/cpp_on_embedded_systems"},"dates":{"created":1490943716,"modified":1647509701}}},
    "staticQueryHashes": []}