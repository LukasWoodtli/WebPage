{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/docker",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"27f113c3-6a7b-5bf6-9064-1f132078ae57","excerpt":"See also: Docker Documentation. [TOC] Setup Start the daemon (on Fedora):  Start the daemon on boot (on Fedora):  Run as user: First create a docker group…","html":"<p>See also: <a href=\"https://docs.docker.com/reference/\">Docker Documentation</a>.</p>\n<p>[TOC]</p>\n<h1 id=\"setup\">Setup</h1>\n<p>Start the daemon (on Fedora): <code class=\"language-text\">sudo systemctl start docker</code></p>\n<p>Start the daemon on boot (on Fedora): <code class=\"language-text\">sudo systemctl enable docker</code></p>\n<p>Run as user:</p>\n<p>First create a docker group:</p>\n<p><code class=\"language-text\">sudo groupadd docker</code></p>\n<p>Then add the actual user to that group:</p>\n<p><code class=\"language-text\">sudo usermod -aG docker $USER</code></p>\n<p>After that log out and log in again.</p>\n<h1 id=\"images-and-containers\">Images and Containers</h1>\n<h2 id=\"list-images\">List Images</h2>\n<p>Command: <code class=\"language-text\">docker images</code></p>\n<p>Columns:</p>\n<ul>\n<li><code class=\"language-text\">REPOSITORY</code>: name of the repository on the Docker Hub</li>\n<li><code class=\"language-text\">TAG</code>: the tag (version) of the image</li>\n<li><code class=\"language-text\">IMAGE ID</code>: first 12 digits of the unique (64 bit) image ID</li>\n<li><code class=\"language-text\">CREATED</code>: the creation date</li>\n<li><code class=\"language-text\">SIZE</code>: size of the image</li>\n</ul>\n<h2 id=\"search-images\">Search Images</h2>\n<p>Command: <code class=\"language-text\">docker search &lt;image-name></code></p>\n<p>Columns:</p>\n<ul>\n<li><code class=\"language-text\">NAME</code>: name of the repository</li>\n<li><code class=\"language-text\">DESCRIPTION</code>: Small description</li>\n<li><code class=\"language-text\">STARS</code>: Showing how many people like the repository</li>\n<li><code class=\"language-text\">OFFICIAL</code>: If it has been approved by the Docker team</li>\n<li><code class=\"language-text\">AUTOMATED</code>: If the build is automanted (on Docker Hub)</li>\n</ul>\n<h2 id=\"pull-images\">Pull Images</h2>\n<p>Command: <code class=\"language-text\">docker pull &lt;image-name></code></p>\n<h2 id=\"remove-images\">Remove Images</h2>\n<p>Command: <code class=\"language-text\">docker rmi &lt;image-id></code></p>\n<p>or: <code class=\"language-text\">docker rmi &lt;image-name>:&lt;tag></code></p>\n<h2 id=\"run-image\">Run Image</h2>\n<p>Command: <code class=\"language-text\">docker run [flags] &lt;image-name>:&lt;tag> [command]</code></p>\n<p>Flags:</p>\n<ul>\n<li><code class=\"language-text\">-i</code>: interactive shell</li>\n<li><code class=\"language-text\">-t</code>: pseudo tty</li>\n<li><code class=\"language-text\">-d</code>: run as daemon</li>\n<li><code class=\"language-text\">-p &lt;host_port>:&lt;container_port></code>: map ports</li>\n</ul>\n<p>If the interactive (<code class=\"language-text\">-i</code>) flag is provided a command sould be executed.\nThis will override the default command that is run when the container is started.</p>\n<p>A random name is assigned to the image.</p>\n<p>Example: <code class=\"language-text\">docker run -i -t fedora:latest /bin/bash</code></p>\n<h2 id=\"execute-command-in-running-container\">Execute Command in running Container</h2>\n<p>Command <code class=\"language-text\">docker exec [flags] &lt;image-name>:tag [command]</code></p>\n<ul>\n<li><code class=\"language-text\">-i</code>: interactive shell</li>\n<li><code class=\"language-text\">-t</code>: pseudo tty</li>\n<li><code class=\"language-text\">-d</code>: run as daemon</li>\n<li><code class=\"language-text\">-w</code>: use working directory</li>\n</ul>\n<h2 id=\"detach-from-running-container\">Detach from running Container</h2>\n<p><code class=\"language-text\">CTRL</code>+<code class=\"language-text\">p</code> <code class=\"language-text\">CTRL</code>+<code class=\"language-text\">q</code></p>\n<h2 id=\"show-running-images\">Show Running Images</h2>\n<p>Command: <code class=\"language-text\">docker ps</code></p>\n<p>To show also containers that are not running: <code class=\"language-text\">docker ps -a</code></p>\n<h2 id=\"logs\">Logs</h2>\n<p>Command: <code class=\"language-text\">docker logs &lt;container-id-or-name></code></p>\n<h2 id=\"stopping-containers\">Stopping Containers</h2>\n<p>Shutdown the container:</p>\n<p>Command: <code class=\"language-text\">docker stop &lt;container-id-or-name></code></p>\n<p>Force quit the container:</p>\n<p>Command: <code class=\"language-text\">docker kill &lt;container-id-or-name></code></p>\n<h2 id=\"renaming-containers\">Renaming Containers</h2>\n<p>Command: <code class=\"language-text\">docker rename &lt;old-name> &lt;new-name></code></p>\n<h2 id=\"getting-information-from-containers\">Getting Information from Containers</h2>\n<p>Command: <code class=\"language-text\">docker stats &lt;container-name></code></p>\n<p>Command: <code class=\"language-text\">docker top &lt;container-name></code></p>\n<h2 id=\"removing-containers\">Removing Containers</h2>\n<p>Command: <code class=\"language-text\">docker rm &lt;container-name></code></p>\n<h1 id=\"registries\">Registries</h1>\n<p>There are three kinds of registries:</p>\n<ul>\n<li>Docker Hub: Hosted registry service by Docker</li>\n<li>Docker Trusted Registry: Hosted or on premise (backend maintained by Docker)</li>\n<li>Docker Registry: For running own Docker registry</li>\n</ul>\n<h1 id=\"docker-machine\">Docker Machine</h1>\n<h2 id=\"create-machines\">Create Machines</h2>\n<p>Create and manage machines running Docker.</p>\n<p>Example (creating a VirtualBox machine running Docker): <code class=\"language-text\">docker-machine create -d virtualbox node1</code></p>\n<h2 id=\"list-machines\">List Machines</h2>\n<p>Command: <code class=\"language-text\">docker-machine ls</code></p>\n<p>Columns:</p>\n<ul>\n<li><code class=\"language-text\">NAME</code>: node name</li>\n<li><code class=\"language-text\">ACTIVE</code>: docker commands are run on the active node</li>\n<li><code class=\"language-text\">DRIVER</code>: which driver is used (e.g. virtualbox)</li>\n<li><code class=\"language-text\">STATE</code>: if it’s running</li>\n<li><code class=\"language-text\">URL</code>: its URL</li>\n<li><code class=\"language-text\">SWARM</code>: if it’s part of a Docker Swarm cluster</li>\n<li><code class=\"language-text\">DOCKER</code>: version of Docker</li>\n<li><code class=\"language-text\">ERRORS</code>: any errors that occurred</li>\n</ul>\n<h2 id=\"restart-a-node\">Restart a Node</h2>\n<p>Commmand: <code class=\"language-text\">docker-machine restart &lt;node-name></code></p>\n<h1 id=\"dockerfile\">Dockerfile</h1>\n<h2 id=\"instructions\">Instructions</h2>\n<ul>\n<li><code class=\"language-text\">FROM</code>: The base image for this Docker image (<code class=\"language-text\">scratch</code> for empty base image).</li>\n<li><code class=\"language-text\">MAINTAINER</code>: Responsible maintainer  (name and e-mail).</li>\n<li><code class=\"language-text\">RUN</code>: Install packages and run other commands.</li>\n<li><code class=\"language-text\">ADD</code>: Add files or folders to the Docker image. URLs can be provided. Automatically unpack or untar a compressed files.</li>\n<li><code class=\"language-text\">COPY</code>: Same as <code class=\"language-text\">ADD</code> but without URL handling or unpacking/untarring.</li>\n<li><code class=\"language-text\">EXPOSE</code>: Expose ports from the image to the outside world.</li>\n<li><code class=\"language-text\">LABEL</code>: Additional information (version number, text …). Each label add a layer to the image.</li>\n<li><code class=\"language-text\">CMD</code>: Execute commands and keep the container alive.</li>\n<li><code class=\"language-text\">ENTRYPOINT</code>: Similar to <code class=\"language-text\">CMD</code>. Can be used in conjunction with <code class=\"language-text\">CMD</code>.</li>\n<li><code class=\"language-text\">USER</code>: Specify which username to use. Influences <code class=\"language-text\">RUN</code>, <code class=\"language-text\">CMD</code> and <code class=\"language-text\">ENTRYPOINT</code> instructions that follow in the Dockerfile.</li>\n<li><code class=\"language-text\">WORKDIR</code>: Specify the directory where to execute instructions. Influences <code class=\"language-text\">RUN</code>, <code class=\"language-text\">CMD</code> and <code class=\"language-text\">ENTRYPOINT</code> instructions that follow in the Dockerfile</li>\n<li><code class=\"language-text\">ONBUILD</code>: Used if image is used as base in another Dockerfile. Executed as first statement after <code class=\"language-text\">FROM</code>. Use in conjunction with <code class=\"language-text\">ADD</code> or <code class=\"language-text\">RUN</code>.</li>\n</ul>\n<h2 id=\"label-informations\">Label Informations</h2>\n<p>Command: <code class=\"language-text\">docker inspect &lt;image-id></code></p>\n<h2 id=\"best-practices\">Best Practices</h2>\n<ul>\n<li>Use a <code class=\"language-text\">.dockerignore</code> file.</li>\n<li>Install only necessary packages.</li>\n<li>Limit the number of layers. Every <code class=\"language-text\">RUN</code> command adds a layer.</li>\n<li>Execute only one process per container.</li>\n</ul>\n<h1 id=\"docker-build\">Docker build</h1>\n<p><code class=\"language-text\">docker build -t &lt;docker-hub-username>/&lt;repository-name> &lt;directory></code></p>\n<p>or</p>\n<p><code class=\"language-text\">docker build -f &lt;path-do-dockerfile> -t &lt;repository>:&lt;tag></code></p>\n<p><code class=\"language-text\">&lt;repository></code>: repository name prefixed by Docker Hub username</p>\n<h2 id=\"the-dockerignore-file\">The <code class=\"language-text\">.dockerignore</code> file</h2>\n<p>This file can be used to exclude files and folders from being sent to the Docker daemon for the build. It should be placed in the same\nfolder as the <code class=\"language-text\">Dockerfile</code>.</p>","frontmatter":{"title":"Docker","tags":["Linux","OS"],"category":"Programming"},"headings":[{"depth":1,"value":"Setup"},{"depth":1,"value":"Images and Containers"},{"depth":2,"value":"List Images"},{"depth":2,"value":"Search Images"},{"depth":2,"value":"Pull Images"},{"depth":2,"value":"Remove Images"},{"depth":2,"value":"Run Image"},{"depth":2,"value":"Execute Command in running Container"},{"depth":2,"value":"Detach from running Container"},{"depth":2,"value":"Show Running Images"},{"depth":2,"value":"Logs"},{"depth":2,"value":"Stopping Containers"},{"depth":2,"value":"Renaming Containers"},{"depth":2,"value":"Getting Information from Containers"},{"depth":2,"value":"Removing Containers"},{"depth":1,"value":"Registries"},{"depth":1,"value":"Docker Machine"},{"depth":2,"value":"Create Machines"},{"depth":2,"value":"List Machines"},{"depth":2,"value":"Restart a Node"},{"depth":1,"value":"Dockerfile"},{"depth":2,"value":"Instructions"},{"depth":2,"value":"Label Informations"},{"depth":2,"value":"Best Practices"},{"depth":1,"value":"Docker build"},{"depth":2,"value":"The <code class=\"language-text\">.dockerignore</code> file"}]}},"pageContext":{"id":"27f113c3-6a7b-5bf6-9064-1f132078ae57","previousPost":{"title":"QEMU Quickstart","slug":"/blog/qemu_quickstart"},"nextPost":{"title":"Visualization of Functions","slug":"/blog/visualization_of_functions"},"dates":{"created":1521457955,"modified":1647509701}}},
    "staticQueryHashes": []}