{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/cpp_on_embedded_systems",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"e961afec-4ec0-526a-900c-4d11a5965342","excerpt":"This page is still work in progress [TOC] No Exceptions (-fno-exception) What do std functions that throw exeptions What happens with library functions that…","html":"<blockquote>\n<p>This page is still work in progress</p>\n</blockquote>\n<p>[TOC]</p>\n<ul>\n<li>No Exceptions (-fno-exception)\n<ul>\n<li>What do std functions that throw exeptions What happens with library functions that throw</li>\n</ul>\n</li>\n<li>No Run Time Type Information (RTTI) (-fno-rtti)</li>\n<li>check size of modules (linker map files)\n<ul>\n<li>Find weakness (according code size) of compiler and avoid this kind of code</li>\n</ul>\n</li>\n<li>Use Templates with care (can generate big code, hard to write, but nice to use)</li>\n<li>Use STL only if enough space available, use allocators (memory pools)</li>\n<li>new/delete can be overloaded</li>\n<li>Avoid new/delete, malloc/free: Memory Fragmentation\n<ul>\n<li>Use Memory Pools instead</li>\n<li>Allocate at start time</li>\n<li>Don’t use any garbage collector</li>\n<li>Use smart pointers if possible</li>\n</ul>\n</li>\n<li>Programm Procedural when OOP is not needed</li>\n<li>Don’t use ‘Embedded C++’, use coding rules and forbid some C++ features</li>\n</ul>","frontmatter":{"title":"C++ on Embedded Systems","tags":["Embedded Systems","C++"],"category":"Programming"},"headings":[]}},"pageContext":{"id":"e961afec-4ec0-526a-900c-4d11a5965342","previousPost":{"title":"Software Development Priorities","slug":"/blog/software_development_priorities"},"nextPost":{"title":"Dot Git Directory","slug":"/blog/git_dotgit_dir"},"dates":{"created":1490944029,"modified":1647509701}}},
    "staticQueryHashes": []}