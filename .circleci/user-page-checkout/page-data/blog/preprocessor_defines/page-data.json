{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/preprocessor_defines",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"c651a9ee-fa17-5257-8ac9-739d895f36fd","excerpt":"Preprocessor Defines This page lists commonly used preprocessor defines for C/C++ Programming Language Language Define C++  C 99  Compiler Compiler Define GNU…","html":"<h1 id=\"preprocessor-defines\">Preprocessor Defines</h1>\n<p>This page lists commonly used preprocessor defines for C/C++</p>\n<h2 id=\"programming-language\">Programming Language</h2>\n<table>\n<thead>\n<tr>\n<th>Language</th>\n<th>Define</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>C++</td>\n<td><code class=\"language-text\">__cplusplus</code></td>\n</tr>\n<tr>\n<td>C 99</td>\n<td><code class=\"language-text\">__STDC__</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"compiler\">Compiler</h2>\n<table>\n<thead>\n<tr>\n<th>Compiler</th>\n<th>Define</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GNU</td>\n<td><code class=\"language-text\">__GNUC__</code></td>\n</tr>\n<tr>\n<td>Visual Studio</td>\n<td><code class=\"language-text\">_MSC_VER_</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"processor\">Processor</h2>\n<table>\n<thead>\n<tr>\n<th>Processor</th>\n<th>Defines</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x86</td>\n<td><code class=\"language-text\">_M_IX86</code>, <code class=\"language-text\">__INTEL__</code>, <code class=\"language-text\">__i386__</code></td>\n</tr>\n<tr>\n<td>x86-64</td>\n<td><code class=\"language-text\">_M_X64</code>, <code class=\"language-text\">__x86_64__</code></td>\n</tr>\n<tr>\n<td>IA64</td>\n<td><code class=\"language-text\">_IA64__</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"endianness\">Endianness</h2>\n<p>| Byte Order      | Define              |\n|-----------------|--- -----------------|\n| Little Endian   | <code class=\"language-text\">__LITTLE_ENDIAN__</code> |\n| Big Endian      | <code class=\"language-text\">__BIG_ENDIAN__</code>    |</p>\n<h2 id=\"os\">OS</h2>\n<table>\n<thead>\n<tr>\n<th>OS</th>\n<th>Defines</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows 32 bit</td>\n<td><code class=\"language-text\">_WIN32</code>, <code class=\"language-text\">__WINDOWS__</code></td>\n</tr>\n<tr>\n<td>Windows 64 bit</td>\n<td><code class=\"language-text\">_WIN64</code>, <code class=\"language-text\">_WIN32</code></td>\n</tr>\n<tr>\n<td>Linux 32 bit</td>\n<td><code class=\"language-text\">__unix__</code>, <code class=\"language-text\">__linux__</code></td>\n</tr>\n<tr>\n<td>Linux 64 bit</td>\n<td><code class=\"language-text\">__unix__</code>, <code class=\"language-text\">__linux__</code>, <code class=\"language-text\">__LP64__</code></td>\n</tr>\n<tr>\n<td>BSD</td>\n<td><code class=\"language-text\">__unix__</code>, <code class=\"language-text\">__BSD__</code>, <code class=\"language-text\">__FREEBSD__</code></td>\n</tr>\n<tr>\n<td>OS X</td>\n<td><code class=\"language-text\">__APPLE__</code>, <code class=\"language-text\">__DARWIN__</code>, <code class=\"language-text\">__MACH__</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"debugging\">Debugging</h2>\n<table>\n<thead>\n<tr>\n<th>Purpose</th>\n<th>Defines</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Visual Studio Debug Code</td>\n<td><code class=\"language-text\">_DEBUG</code></td>\n</tr>\n<tr>\n<td>Disable assert()</td>\n<td><code class=\"language-text\">NDEBUG</code></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"qt\">Qt</h1>\n<p>Qt has it’s own preprocessor defines: <a href=\"http://doc.qt.io/qt-5/qtglobal.html\">Global Qt Declarations</a></p>\n<h2 id=\"endianness-1\">Endianness</h2>\n<table>\n<thead>\n<tr>\n<th>Byte Order</th>\n<th>Define</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Little Endian</td>\n<td><code class=\"language-text\">Q_LITTLE_ENDIAN</code></td>\n</tr>\n<tr>\n<td>Big Endian</td>\n<td><code class=\"language-text\">Q_BIG_ENDIAN</code></td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"language-text\">Q_BYTE_ORDER</code> is set to either <code class=\"language-text\">Q_LITTLE_ENDIAN</code> or <code class=\"language-text\">Q_BIG_ENDIAN</code>.</p>\n<h2 id=\"compiler-1\">Compiler</h2>\n<table>\n<thead>\n<tr>\n<th>Compiler</th>\n<th>Define</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GNU C++ (and clang?)</td>\n<td><code class=\"language-text\">Q_CC_GNU</code></td>\n</tr>\n<tr>\n<td>Microsoft Visual C/C++ or Intel C++ for Windows</td>\n<td><code class=\"language-text\">Q_CC_MSVC</code></td>\n</tr>\n<tr>\n<td>Intel C++ (Linux, Windows)</td>\n<td><code class=\"language-text\">Q_CC_INTEL</code></td>\n</tr>\n</tbody>\n</table>\n<p>There are a lot more defines for different compilers.</p>\n<h2 id=\"os-1\">OS</h2>\n<table>\n<thead>\n<tr>\n<th>OS</th>\n<th>Define</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android</td>\n<td><code class=\"language-text\">Q_OS_ANDROID</code></td>\n</tr>\n<tr>\n<td>BSD 4.4</td>\n<td><code class=\"language-text\">Q_OS_BSD4</code></td>\n</tr>\n<tr>\n<td>Cygwin</td>\n<td><code class=\"language-text\">Q_OS_CYGWIN</code></td>\n</tr>\n<tr>\n<td>OS X, iOS, Darwin</td>\n<td><code class=\"language-text\">Q_OS_DARWIN</code></td>\n</tr>\n<tr>\n<td>FreeBSD</td>\n<td><code class=\"language-text\">Q_OS_FREEBSD</code></td>\n</tr>\n<tr>\n<td>iOS</td>\n<td><code class=\"language-text\">Q_OS_IOS</code></td>\n</tr>\n<tr>\n<td>Linux</td>\n<td><code class=\"language-text\">Q_OS_LINUX</code></td>\n</tr>\n<tr>\n<td>OS X, iOS (not OSS Darwin)</td>\n<td><code class=\"language-text\">Q_OS_MAC</code></td>\n</tr>\n<tr>\n<td>NetDSB</td>\n<td><code class=\"language-text\">Q_OS_NETBSD</code></td>\n</tr>\n<tr>\n<td>OpenDSB</td>\n<td><code class=\"language-text\">Q_OS_OPENBSD</code></td>\n</tr>\n<tr>\n<td>OS X</td>\n<td><code class=\"language-text\">Q_OS_OSX</code></td>\n</tr>\n<tr>\n<td>QNX Neutrino</td>\n<td><code class=\"language-text\">Q_OS_QNX</code></td>\n</tr>\n<tr>\n<td>Any UNIX BSD/SYSV system</td>\n<td><code class=\"language-text\">Q_OS_UNIX</code></td>\n</tr>\n<tr>\n<td>32-bit and 64-bit Windows (not Windows CE)</td>\n<td><code class=\"language-text\">Q_OS_WIN32</code></td>\n</tr>\n<tr>\n<td>64-bit Windows</td>\n<td><code class=\"language-text\">Q_OS_WIN64</code></td>\n</tr>\n<tr>\n<td>All supported Windows</td>\n<td><code class=\"language-text\">Q_OS_WIN</code></td>\n</tr>\n<tr>\n<td>Windows CE</td>\n<td><code class=\"language-text\">Q_OS_WINCE</code></td>\n</tr>\n<tr>\n<td>Windows Phone 8</td>\n<td><code class=\"language-text\">Q_OS_WINPHONE</code></td>\n</tr>\n<tr>\n<td>Windows Runtime</td>\n<td><code class=\"language-text\">Q_OS_WINRT</code></td>\n</tr>\n</tbody>\n</table>\n<p>There are a lot more defines for supported OS’s by Qt.</p>\n<h2 id=\"processors\">Processors</h2>\n<table>\n<thead>\n<tr>\n<th>Processor</th>\n<th>Defines</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Intel x86 (32-bit, 64-bit)</td>\n<td><code class=\"language-text\">Q_PROCESSOR_X86</code></td>\n</tr>\n<tr>\n<td>Intel x86 (32-bit)</td>\n<td><code class=\"language-text\">Q_PROCESSOR_X86_32</code></td>\n</tr>\n<tr>\n<td>Intel x86 (64-bit)</td>\n<td><code class=\"language-text\">Q_PROCESSOR_X86_64</code></td>\n</tr>\n<tr>\n<td>Inel IA64 (Itanium, Itanium 2)</td>\n<td><code class=\"language-text\">Q_PROCESSOR_IA64</code></td>\n</tr>\n<tr>\n<td>ARM (V5, V6, V7)</td>\n<td><code class=\"language-text\">Q_PROCESSOR_ARM</code> (defined on all ARM architectures)</td>\n</tr>\n<tr>\n<td>ARMv5</td>\n<td><code class=\"language-text\">Q_PROCESSOR_ARM_V5</code></td>\n</tr>\n<tr>\n<td>ARMv6</td>\n<td><code class=\"language-text\">Q_PROCESSOR_ARM_V6</code>, <code class=\"language-text\">Q_PROCESSOR_ARM_V5</code></td>\n</tr>\n<tr>\n<td>ARMv7</td>\n<td><code class=\"language-text\">Q_QPROCESSOR_ARM_V7</code>.<code class=\"language-text\">Q_PROCESSOR_ARM_V6</code>, <code class=\"language-text\">Q_PROCESSOR_ARM_V5</code></td>\n</tr>\n<tr>\n<td>AVR 32</td>\n<td><code class=\"language-text\">Q_PROCESSOR_AVR32</code></td>\n</tr>\n</tbody>\n</table>\n<p>There are a lot more defines for supported processors by Qt.</p>","frontmatter":{"title":"Preprocessor Defines","tags":["C","C++"],"category":"Programming"},"headings":[{"depth":1,"value":"Preprocessor Defines"},{"depth":2,"value":"Programming Language"},{"depth":2,"value":"Compiler"},{"depth":2,"value":"Processor"},{"depth":2,"value":"Endianness"},{"depth":2,"value":"OS"},{"depth":2,"value":"Debugging"},{"depth":1,"value":"Qt"},{"depth":2,"value":"Endianness"},{"depth":2,"value":"Compiler"},{"depth":2,"value":"OS"},{"depth":2,"value":"Processors"}]}},"pageContext":{"id":"c651a9ee-fa17-5257-8ac9-739d895f36fd","previousPost":{"title":"Object File Formats","slug":"/blog/object_file_formats"},"nextPost":{"title":"Executable Loader","slug":"/blog/executable_loader"},"dates":{"created":1439301854,"modified":1647509701}}},
    "staticQueryHashes": []}