{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/files_linux",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"5f1a0a7a-2f78-5f6e-935a-ad32198300d1","excerpt":"Some information on this page is taken from here (German). Process Control Block (PCB) Contains the information about a process. C struct  Pointer to code…","html":"<p>Some information on this page is taken from <a href=\"http://openbook.rheinwerk-verlag.de/linux_unix_programmierung/Kap02-001.htm\">here</a> (German).</p>\n<h1 id=\"process-control-block-pcb\">Process Control Block (PCB)</h1>\n<p>Contains the information about a process.</p>\n<ul>\n<li>C struct <code class=\"language-text\">task_struct</code></li>\n<li>Pointer to code section (text)</li>\n<li>Pointer to data section</li>\n<li>State: running, ready, blocked, terminated</li>\n<li>Instruction pointer (IP): next instruction to execute</li>\n<li>Saved registers</li>\n<li>Memory information: pages</li>\n<li>Scheduler information\n<ul>\n<li>Priority</li>\n<li>Pointer to scheduler queue</li>\n</ul>\n</li>\n<li>Table with open file descriptors hold by this process</li>\n</ul>\n<h1 id=\"file-table\">File Table</h1>\n<ul>\n<li>1 entry for each open file</li>\n<li>different processes can point to the same entry</li>\n<li>Entry:\n<ul>\n<li>number of i-nodes</li>\n<li>position pointer</li>\n<li>mode (read, write, append…)</li>\n<li>pointer to v-node table</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"v-node-table\">v-node Table</h1>\n<ul>\n<li>i-node information\n<ul>\n<li>copied to v-node table when file is opened</li>\n<li>owner</li>\n<li>rights</li>\n<li>user/group ids</li>\n<li>number of links</li>\n</ul>\n</li>\n<li>file information</li>\n<li>file size</li>\n<li>functions (file system dependent)</li>\n</ul>\n<h1 id=\"file-descriptors\">File Descriptors</h1>\n<p>File descriptors are unique ID’s (ints) that identify an open file.</p>\n<p>3 descriptors are reserved by the system in <code class=\"language-text\">&lt;unistd.h></code>:</p>\n<table>\n<thead>\n<tr>\n<th>Constant</th>\n<th>Number</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>STDIN_FILENO</td>\n<td>0</td>\n<td>Standard input</td>\n</tr>\n<tr>\n<td>STDOUT_FILENO</td>\n<td>1</td>\n<td>Standard output</td>\n</tr>\n<tr>\n<td>STDERR_FILENO</td>\n<td>2</td>\n<td>Standard error</td>\n</tr>\n</tbody>\n</table>\n<p>The number can differ but the given ones are common.</p>\n<p>Functions that return a file descriptor (e.g. <code class=\"language-text\">open(...)</code>or <code class=\"language-text\">creat(...)</code>) return <code class=\"language-text\">-1</code> if en error occurred.</p>\n<h1 id=\"file-types\">File Types</h1>\n<p>There are 6 different file types in Linux:</p>\n<ul>\n<li>Regular files</li>\n<li>Directories</li>\n<li>Device files</li>\n<li>Sockets</li>\n<li>Pipes (named Pipes and FIFOs)</li>\n<li>Links (Soft- and Hardlinks)</li>\n</ul>\n<h1 id=\"special-device-files\">Special Device Files</h1>\n<p>See <a href=\"%7Bfilename%7D/unix_device_files.md\">here</a> for a description for device files.</p>","frontmatter":{"title":"Files and File descriptors on Linux","tags":["Computer Science","OS","Linux"],"category":"Programming"},"headings":[{"depth":1,"value":"Process Control Block (PCB)"},{"depth":1,"value":"File Table"},{"depth":1,"value":"v-node Table"},{"depth":1,"value":"File Descriptors"},{"depth":1,"value":"File Types"},{"depth":1,"value":"Special Device Files"}]}},"pageContext":{"id":"5f1a0a7a-2f78-5f6e-935a-ad32198300d1","previousPost":{"title":"Object Databases","slug":"/blog/object_databases"},"nextPost":{"title":"Requirements Engineering","slug":"/blog/requirements_engineering"},"dates":{"created":1464969399,"modified":1647509701}}},
    "staticQueryHashes": []}