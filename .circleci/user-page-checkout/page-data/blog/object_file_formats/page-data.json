{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/object_file_formats",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"5d7a98b5-f81a-509d-8967-7a6a03092225","excerpt":"Most information of this page is taken from\nCalling conventions for different C++ compilers and operating systems. Overview Object Format Platform COFF / PE…","html":"<p>Most information of this page is taken from\n<a href=\"http://www.agner.org/optimize/#manuals\">Calling conventions for different C++ compilers and operating systems</a>.</p>\n<h1 id=\"overview\">Overview</h1>\n<table>\n<thead>\n<tr>\n<th>Object Format</th>\n<th>Platform</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>COFF / PE</td>\n<td>Windows 32 (PE), Windows 64 (PE32+)</td>\n</tr>\n<tr>\n<td>ELF</td>\n<td>Linux, UNIX, BSD…</td>\n</tr>\n<tr>\n<td>Mach-O</td>\n<td>OS X (Darwin)</td>\n</tr>\n<tr>\n<td>a.out</td>\n<td>Older versions of UNIX</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"common-object-file-format-coff-pe\">Common Object File Format (COFF, PE)</h2>\n<p>First used in UNIX System V, later superseeded by ELF.</p>\n<p>PE (Portable Executable) is a modified version of COFF from\nMicrosoft that is used for Windows.</p>\n<p>The same format is used for object files and for executables.</p>\n<p>Compilers that use COFF / PE:</p>\n<ul>\n<li>Visual C++</li>\n<li>Intel (Win)</li>\n<li>GCC (Win)</li>\n</ul>\n<p>COFF uses many different data structures. This makes it difficult to handle.\nAlignment handling of the data structures can be difficult.</p>\n<p>Properties:</p>\n<ul>\n<li>Can contain debug information</li>\n<li>Different implementations (COFF, PE, XCOFF, ECOFF) are not compatible</li>\n</ul>\n<p>Limitations:</p>\n<ul>\n<li>Segment word size: 32 or 64 bits.</li>\n<li>Max number of sections: 32k.</li>\n<li>Max file size: 4 GB.</li>\n<li>Max section size: 4 GB.</li>\n<li>Max relocations per section: 64k.</li>\n<li>Max library size: 4 GB.</li>\n</ul>\n<h2 id=\"executable-and-linkable-format-elf\">Executable and Linkable Format (ELF)</h2>\n<p>Replaced older formats like a.out and COFF in Linux and BSD.</p>\n<p>Compilers:</p>\n<ul>\n<li>GCC (Linux, BSD, Win…)</li>\n</ul>\n<p>Clear and robust design.</p>\n<p>Limitations:</p>\n<ul>\n<li>Segment word size: 32 or 64 bits.</li>\n<li>Max number of sections: 64k.</li>\n<li>Max file size: 4 GB for 32 bits, <span class=\"math math-inline\"><span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span></span> for 64 bits.</li>\n<li>Max section size: 4 GB for 32 bits, <span class=\"math math-inline\"><span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span></span> for 64 bits.</li>\n<li>String table size: 4 GB.</li>\n<li>Max number of symbols: 16M for 32 bits, 4G for 64 bits.</li>\n<li>Max library size: 4 GB.</li>\n</ul>\n<h2 id=\"mach-o-format\">Mach-O Format</h2>\n<p>This format is used by OS X.\nOnly the format for Intel Mac OS X is described here.</p>\n<p>Can be used for object files and executable files.</p>\n<p>Object files have only one segment record that contains several section records.</p>\n<p>Executable files contain several segment records.</p>\n<p>Mach-O allows address specifications relative to any reference point in any section.\nThis is used for position-independent code.</p>\n<p>Limitations:</p>\n<ul>\n<li>Section name length: 16 characters.</li>\n<li>Max file size: 4 GB.</li>\n<li>Max section size: 16 MB for position-indep code, 4 GB for 32 bits, <span class=\"math math-inline\"><span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span></span> for 64 bits.</li>\n<li>Max number of sections: 16 M.</li>\n<li>Max number of symbols: 16 M.</li>\n<li>Max library size: 4 GB.</li>\n</ul>\n<h2 id=\"aout-format\">a.out Format</h2>\n<p>Stands for ‘Assembler Output’.</p>\n<p>Is used in older UNIX systems.</p>\n<p>‘a.out’ is often the default output file name of linkers. Even if the\noutput format is an other one.</p>\n<p>Some tools still support the a.out format.</p>\n<h2 id=\"data-endianness\">Data Endianness</h2>\n<p>All systems based on x86 (16-bit, 32-bit and 64-bit) use little endian.</p>","frontmatter":{"title":"Object File Formats","tags":["OS"],"category":"Programming"},"headings":[{"depth":1,"value":"Overview"},{"depth":2,"value":"Common Object File Format (COFF, PE)"},{"depth":2,"value":"Executable and Linkable Format (ELF)"},{"depth":2,"value":"Mach-O Format"},{"depth":2,"value":"a.out Format"},{"depth":2,"value":"Data Endianness"}]}},"pageContext":{"id":"5d7a98b5-f81a-509d-8967-7a6a03092225","previousPost":{"title":"Concepts of Object Oriented Programming","slug":"/blog/concepts_of_object_oriented_programming"},"nextPost":{"title":"Preprocessor Defines","slug":"/blog/preprocessor_defines"},"dates":{"created":1438859480,"modified":1647509701}}},
    "staticQueryHashes": []}