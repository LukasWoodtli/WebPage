{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blog/requirements_engineering",
    "result": {"data":{"site":{"siteMetadata":{"title":"My personal Website"}},"markdownRemark":{"id":"42d681e1-cee8-5f93-a290-f782d3ce4221","excerpt":"This article is work in progress. Conceptual Design => Technical Design => Implementation Actors, Personas Mock-ups (for non-engineer) Paper Mock-ups Tools for…","html":"<blockquote>\n<p>This article is work in progress.</p>\n</blockquote>\n<ul>\n<li>\n<p>Conceptual Design => Technical Design => Implementation</p>\n</li>\n<li>\n<p>Actors, Personas</p>\n</li>\n<li>\n<p>Mock-ups (for non-engineer)</p>\n<ul>\n<li>Paper Mock-ups</li>\n<li>Tools for Mock-ups (functional)</li>\n</ul>\n</li>\n<li>\n<p>Rapid Prototype</p>\n</li>\n<li>\n<p>Architecture</p>\n<ol>\n<li>Geographic Architecture: Local, Client-Server, Cloud…</li>\n<li>Technological Architecture: SQL, JSON, XML, Programming Language</li>\n<li>Logical (Business) Architecture: Semantics, Implementation that satisfies the Requirements</li>\n</ol>\n</li>\n<li>\n<p>Functional and Non-Functional Requirements</p>\n<ul>\n<li>Functional Requirements: What the Software needs to do</li>\n<li>Non-Functional Requirements: Quality criteria: Security, extensibility, scalibility…</li>\n</ul>\n</li>\n<li>\n<p>Logical Architecture</p>\n<ul>\n<li>Read the Specification: Nouns => Actors/Entities, Verbs => Actions/Functionality/Behavior</li>\n<li>Entities + Behavior => Data Model</li>\n<li>Methods: input -> output (table form)</li>\n<li>Entities: data -> creator</li>\n<li>Components (Bottom-Top):\n<ol>\n<li>Create Data Model</li>\n<li>Build Application</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>API driven development</p>\n</li>\n<li>\n<p>Conceptual data model:</p>\n<ul>\n<li>first high-level, go in detail later</li>\n<li>describe reality => Model\n<ul>\n<li>OOP</li>\n<li>SQL</li>\n<li>…</li>\n<li>Impedance mismatch</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Relationships (pointers/references in most languages)</p>\n<ul>\n<li>mostly more complex and with semantics</li>\n</ul>\n</li>\n<li>\n<p>Know the Problem! Don’t start before you really know the problem!</p>\n<ul>\n<li>be convinced about solution</li>\n</ul>\n</li>\n<li>\n<p>Describe application domain (reality)</p>\n</li>\n<li>\n<p>Modeling Language (programming languages…) needed to capture details of reality</p>\n<ul>\n<li>e.g Java (and other OOP languages) can not properly model relationships</li>\n</ul>\n</li>\n<li>\n<p>Impedance mismatch</p>\n<ul>\n<li>if two connected models are not the same</li>\n<li>OOP &#x3C;-> reality</li>\n<li>OOP &#x3C;-> relational-dbs (SQL)</li>\n</ul>\n</li>\n<li>\n<p>Relational DB:</p>\n<ul>\n<li>Table: Relation (similar to class)</li>\n<li>Columns: Relation attributes (similar to class attributes)</li>\n<li>Keys: Pointers (relationships)</li>\n</ul>\n</li>\n<li>\n<p>Start with simple things => improve</p>\n<ul>\n<li>agile</li>\n</ul>\n</li>\n<li>\n<p>List available operations with input and output (e.g use Fitnesse…)</p>\n</li>\n</ul>\n<p>Example:</p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>in</th>\n<th>out</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>create</td>\n<td>message, location</td>\n<td>-</td>\n</tr>\n<tr>\n<td>get</td>\n<td>location</td>\n<td>set of messages</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>Sentences (e.g. use cases):</p>\n<ul>\n<li>Nouns: Objects (classes)</li>\n<li>Verbs: Methods</li>\n</ul>\n</li>\n<li>\n<p>Software objects</p>\n<ul>\n<li>requirements specifications, designs, documentations, program code, test plans, test cases, user manuals, project plans, …</li>\n<li>object identification</li>\n<li>object granularity (module:declarations and statements, documentation:chapters and sections)</li>\n<li>object representation (files, graph, …)</li>\n</ul>\n</li>\n<li>\n<p>Relationships</p>\n<ul>\n<li>composition relationships: tree with root representing product</li>\n<li>dependency relationships</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Requirements Engineering","tags":null,"category":"Programming"},"headings":[]}},"pageContext":{"id":"42d681e1-cee8-5f93-a290-f782d3ce4221","previousPost":{"title":"Files and File descriptors on Linux","slug":"/blog/files_linux"},"nextPost":{"title":"Statements and Expressions","slug":"/blog/statements_and_expressions"},"dates":{"created":1467024762,"modified":1647509701}}},
    "staticQueryHashes": []}